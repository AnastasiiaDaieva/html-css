/* Задание
Для селектора p задайте свойство color и значение red, свойство font-size и значение 20px; */
p { color: red; font-size: 20px; }

/* Задание
Для селектора * (любой элемент) задай свойство margin и значение 0, свойство padding и значение 0; */
* { margin: 0; padding: 0; }

/* Задание
Для тега li отмени свойство  list-style с помощью значения none. Задай свойству color значение green; Убедись на примере изменения цвета текста, что у тега более высокий приоритет, чем у *. */

* { color: red; } li { list-style: none; color: green; }

/* Задание
Для класса rule задай свойство  list-style и значение upper-roman, свойство color и значение navy;
Убедись на примере появления римской нумерации и изменения цвета текста, что у класса более высокий приоритет, чем у тега. */

li { list-style: none; color: green; } .rule { list-style: upper-roman; color:
navy; }

/* Задание
Двум элементам с классом common-rule добавлены классы first-rule и last-rule, т.е. создана композиция с классом common-rule.
Добавьте CSS правила для класса first-rule и last-rule под текстом с правилом для класса common-rule (почему именно такое расположение будет рассмотрено позже).
Для класса first-rule добавьте свойство color и значение red.
Для класса last-rule добавьте свойство color и значение green. */

.common-rule { list-style: upper-roman; font-size: 20px; } .first-rule { color:
red; } .last-rule { color: green; }

/* Задание
В CSS добавь класс active к селекторам button и link так, чтобы

правило color: red применилось только к элементу button, содержащему одновременно класс btn и active;
правило font-weight: 700 применилось только к элементу a, содержащему одновременно класс link и active. */

.btn { border: none; padding: .25rem 1.25rem; } .link { text-decoration: none;
color: navy; } /* Напиши свой код под этой строкой */ .btn.active { color: red;
} .link.active { font-weight: 700; }

/* Задание
Добавь псевдокласс :hover и :focus так, чтобы для класса link применялось свойство opacity: 1 при наведении курсора или получения фокуса с помощью клавиши tab */
.link { text-decoration: none; color: navy; opacity: 0.5; } /* Напиши свой код
под этой строкой */ .link:hover, .link:focus { opacity: 1; }

/* Задание
Для селектора в виде атрибута [type] задай свойство color со значением white.
Повышаем специфичность. Для селектора в виде тега button и атрибута [type="reset"] задай свойство color со значением green */
[type] { color: white; } button[type="reset"] { color: green; }

/* Задание
Для ссылок с атрибутом href, значение которых начинается с ./ задай цвет текста red.
Для ссылок с атрибутом href, значение которых начинается с https задай цвет текста navy.
Специфичность селекторов должна быть минимальной. */

.link { text-decoration: none; } [href^="./"] { color: red; } [href^="https"] {
color: navy; }

/* Задание
Для атрибутов, заканчивающихся на html задай цвет текста green.
Для атрибутов, заканчивающихся на css задай цвет текста orangered.
Специфичность селекторов должна быть минимальной. */

.link { text-decoration: none; } [href$="html"] { color: green; } [href$="css"]
{ color: orangered; }

/* Задание
Для атрибутов, содержащих about задай цвет текста green.
Для атрибутов, содержащих com задай цвет текста orangered.
Специфичность селекторов должна быть минимальной. */

.link { text-decoration: none; } [href*="about"] { color: green; } [href*="com"]
{ color: orangered; }

/* Задание
Добавь CSS правило с id селектором sending со свойством background-color и значением teal, со свойством color и значением white.

Обрати внимание на то что у id более высокий приоритет, чем у класса. */
.warning { background-color: white; color: red; } #sending { background-color:
teal; color: white; }

/* Задание
Задайте элементу div инлайн стили CSS со свойством background-color и значением orange, со свойством color и значением navy.

Обратите внимание на более высокий приоритет у инлайн-стилей по сравнению с классом и id. */

<div class="warning" id="inline" style="background-color: orange; color: navy">
  Инлайн стили нежелательно использовать из-за более высокого приоритета чем у
  id, а также из-за сложности c поддержкой и переиспользованем кода.
</div>

/* Задание
Добавь !important обеим значениям свойств селектора div.

Обрати внимание на то что у div приоритет изменился и стал более высоким чем у инлайн. */

div { background-color: navy!important; color: white !important; } .warning {
background-color: white; color: red; } #inline { background-color: red; color:
white; }

/* Задание
Добавь к селектору menu-item еще один класс menu так, чтобы оба свойства display и vertical-align применились только к прямым потомкам класса menu, но не к потомкам sub-menu. */

ul { padding: 0; list-style: none; } .menu>.menu-item { display: inline-block;
vertical-align: top; }

/* Задание
В html коде дано меню, которое содержит два подменю, вложенных одно в другое. В css кода все подменю с классом sub-menu скрыты с помощью свойства opacity. Необходимо разместить элементы li списка с классом menu по горизонтали, а li списков с классом sub-menu должны остаться в вертикальном положении. Также при наведении курсором на элемент li должно показываться скрытое меню.

Для этого

Добавь к селектору menu все элементы с селектором класса menu-item, которые являются первыми потомками списка с классом menu.
Добавь к селектору sub-menu все элементы с селектором класса menu-item, которые являются потомками списка с классом sub-menu на любом уровне вложенности.
Добавь к селектору menu-item:hover все элементы, которые являются потомками элемента с классом menu-item на любом уровне вложенности.
Обрати внимание на поведение элементов меню при hover до и после успешного выполнения задания. */

ul { padding: 0; list-style: none; } .menu>.menu-item { display: inline-block;
vertical-align: top; opacity: 1; } .sub-menu .menu-item { opacity: 0;
margin-left: 100px; } .menu-item:hover .menu-item { opacity: 1; }

/* Задание
Добавь к селектору item-1 еще один класс item так, чтобы свойство color: red применилось только к первому соседу - элементу с классом item-2 */
.item-1+.item { color: red; }

/* Задание
Добавь к селектору item-2 еще один класс item так, чтобы свойство color со значением red применилось ко всем нижним соседям этого элемента.

Т.е. правило должно примениться к элементам с классом item-3 и item-4.

Ни к каким другим элементам color: red больше применяться не должно. */
.item-2~.item { color: red; }

/* Задание
Не меняя селекторы и правила CSS сделай так, чтобы цвет текста всех элементов стал maroon (перемести CSS правила). */
.headline.title{ color: navy; } .title[title] { color: maroon; }

/* Задание
В коде html есть элемент ul с классом cards и есть последний элемент li с классом last-of-type. С помощью наследования нужно изменить цвет текста для элементов-потомков этих двух элементов. Для этого необходимо:

селектору класса cards задать цвет текста navy;
селектору класса last-of-type задать цвет текста firebrick. */
.cards { color: navy; } .last-of-type { color: firebrick; }

/* Задание
Т.к. цвет текста для ссылок не наследуется, то задай ссылке цвет green, используя класс в качестве селектора

.list { padding-left: 0; list-style: none; color: green; } .list-link { color:
green; }

Задание
Подключите в правильном порядке файлы стилей, расположенных в папке css:

css/modern-normalize.css
css/style.css

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Document</title>
    <link href="css/modern-normalize.css" rel="stylesheet" />
    <link href="css/style.css" rel="stylesheet" />
  </head>
  <body></body>
</html>

Задание
В формате rgb, используя только значения от 0 до 255:

задай классу box белый цвет текста и черный фон
задай классу red максимально красный фон
задай классу green максимально зеленый фон
задай классу blue максимально синий фон */

.box { background-color: rgb(0, 0, 0); color: rgb(255, 255, 255); } .red {
background-color: rgb(255, 0, 0); } .green { background-color: rgb(0, 255, 0); }
.blue { background-color: rgb(0, 0, 255); }

/* Задание
В сокращенном hex формате

задай классу box белый цвет текста и черный фон;
задай классу red максимально красный фон;
задай классу green максимально зеленый фон;
задай классу blue максимально синий фон. */

.box { background-color: #000; color: #fff; } .red { background-color: #f00 }
.green { background-color: #0f0 } .blue { background-color: #00f }

/* Задание
Сделай цвет текста контрастным - добавь белый цвет в формате hsl для классов lightness-25 и lightness-0 */

.lightness { width: 50px; height: 50px; line-height: 50px; margin: 0.5rem;
text-align: center; border: 1px solid gold; } .lightness-100 { background-color:
hsl(0, 100%, 100%); } .lightness-75 { background-color: hsl(0, 100%, 75%); }
.lightness-50 { background-color: hsl(0, 100%, 50%); } .lightness-25 {
background-color: hsl(0, 100%, 25%); color: hsl(100, 100%, 100%); } .lightness-0
{ background-color: hsl(0, 100%, 0%); color: hsl(100, 100%, 100%); }

/* Задание
Задай свойство opacity селекторам .opacity:hover и .opacity:focus так, чтобы прозрачность отсутствовала.
Задай свойству background-color селекторам .transparent:hover и .transparent:focus значение - именованный цвет прозрачности. */

.container { padding: 1rem; background-color: navy; } .box { width: 200px;
height: 50px; margin: 1rem auto; color: #fff; font-size: 24px; line-height:
50px; text-align: center; cursor: pointer; background-color: orchid; border: 4px
solid gold; } .opacity { opacity: .5; } /* Напиши код под этой строкой */
.opacity:hover, .opacity:focus { opacity: 1; } .transparent:hover,
.transparent:focus { background-color: transparent; }

/* Задание
Задай свойству background-color селектору [data-color="rgba"]:hover значение - полупрозрачный цвет в формате rgba вместо заданного в формате rgb.
Задай свойству background-color селектору [data-color="hsla"]:hover значение - полупрозрачный цвет в формате hsla вместо заданного в формате hsl.
Задай свойству background-color селектору [data-color="hexa"]:hover значение - полупрозрачный цвет в формате hexa вместо заданного в формате hex. */
[data-color] { padding: 0.5rem 1.5rem; border: none; background-color: #008;
color: #fff; font-size: 1.5rem; } [data-color="rgba"]:hover { background-color:
rgba(0, 0, 136, .5); } [data-color="hsla"]:hover { background-color: hsla(240,
100%, 27%, .5); } [data-color="hexa"]:hover { background-color: #00008a80; }

/* BLOCK 4
Задание
Для текста абзаца (параграфа)

задай селектор в виде имени тега ;
сделай отступ первой строки на 40px. */
p { text-indent: 40px; }

/* Задание
Используй название класса columns в качестве селектора.
Добавь css свойство text-indent с отступом первой строки абзаца в 40px.
Добавь css свойство column-count значение для создания 2-х колонок. */
.columns { text-indent: 40px; column-count: 2; }

/* Задание
Размести текст и элементы button внутри элементов div с помощью свойства text-align в определенном горизонтальном порядке:

для элемента с классом left строчные элементы или текст должны быть прижаты влево;
для элемента с классом right строчные элементы или текст должны быть прижаты вправо;
для элемента с классом center строчные элементы или текст должны находиться по центру элемента div;
для элемента с классом justify строчные элементы или текст должны быть растянуты на всю ширину элемента div, если строка заполнена. */
.left { text-align: left; } .right { text-align: right; } .center { text-align:
center; } .justify { text-align: justify; }

/* Задание
Для font-size со значением 18px требуется отступ под строкой и над строкой по 9px. Задай элементу p свойство line-height в безразмерном виде. */
p { line-height: 2; }

/* Задание
Измени вертикальное расположение текста и блоков со свойством display: inline-block согласно расположению на рисунке. */
.boxes, .cards, .letter { font-size: 36px; height: 100px; padding: 1rem;
background-color: goldenrod; margin-bottom: 1rem; } .box-48 { font-size: 48px; }
.box-72 { font-size: 72px; } .card { height: 36px; width: 18px; } .card-48 {
height: 48px; width: 36px; } .card-72 { height: 72px; width: 48px; } /* Напиши
код под этой строкой */ .box, .card { display: inline-block; vertical-align:
top; background-color: blueviolet; } .letter::first-letter { font-size: 72px;
vertical-align: top; }

/* Задание
Измени вертикальное расположение текста и блоков со свойством display: inline-block согласно расположению на рисунке. */
.boxes, .cards, .letter { font-size: 36px; height: 100px; padding: 1rem;
background-color: goldenrod; margin-bottom: 1rem; } .box-48 { font-size: 48px; }
.box-72 { font-size: 72px; } .card { height: 36px; width: 18px; } .card-48 {
height: 48px; width: 36px; } .card-72 { height: 72px; width: 48px; } /* Напиши
код под этой строкой */ .box, .card { display: inline-block; vertical-align:
middle; background-color: blueviolet; } .letter::first-letter { font-size: 72px;
vertical-align: middle; }

/* Задание
Измени вертикальное расположение текста и блоков со свойством display: inline-block согласно расположению на рисунке. */
.boxes, .cards, .letter { font-size: 36px; height: 100px; padding: 1rem;
background-color: goldenrod; margin-bottom: 1rem; } .box-48 { font-size: 48px; }
.box-72 { font-size: 72px; } .card { height: 36px; width: 18px; } .card-48 {
height: 48px; width: 36px; } .card-72 { height: 72px; width: 48px; } /* Напиши
код под этой строкой */ .box, .card { display: inline-block; vertical-align:
bottom; background-color: blueviolet; } .letter::first-letter { font-size: 72px;
vertical-align: bottom; }

/* Задание
Задай или измени свойство text-transform. Значение возьмите из значения аргумента data-transform в коде html.

Обратите внимание на то, что значение применится к тексту из элемента span. */

[data-transform="none"] { text-transform: none; } [data-transform="uppercase"] {
text-transform: uppercase; } [data-transform="lowercase"] { text-transform:
lowercase; } [data-transform="capitalize"] { text-transform: capitalize; }

/* Задание
Найдите элементы с классом в html коде и селектор с тем же классом в css коде.
Для каждого такого элемента html перенесите значения из аргументов data-line, data-style и data-color в качестве значений для свойства text-decoration.
Для селектора с классом no перезапишите значение text-decoration с помощью значения из data-line. */

body { font-size: 36px; padding: 1rem; } /* Напиши код под этой строкой */ .up {
text-decoration: overline wavy red; } .through { text-decoration: line-through
dashed green; } .down { text-decoration: underline solid blue; } .no {
text-decoration: none; } .combi { text-decoration: underline overline double
grey; }

/* Задание
Для элемента li с классом one задай тень для текста. Для этого в коде html у элемента li с классом one найди атрибуты data. И задай в css коде селектору класса one свойство text-shadow со значениями:
смещение X (по горизонтали) взятое из значения атрибута data-x
смещение Y (по вертикали) взятое из значения атрибута data-y
blur (размытие) взятое из значения атрибута data-blur
color (цвет) взятое из значения атрибута data-color
Для элемента li с классом rings задай 4 тени разного цвета для буквы O. Селектору rings уже задано свойство text-shadow состоящее из 4 теней на разном расстоянии. Для того, чтобы задать цвет, в коде html у элемента li с классом one найди атрибут data-colors. Добавь эти цвета к значениям свойства text-shadow селектора rings согласно синтаксису для этого свойства (т.е. цвет должен быть в конце перчисления - перед запятой или точкой с запятой). Порядок цветов показан на рисунке: */
body { font-family: sans-serif; font-size: 36px; padding: 1rem; } /* offset-x |
offset-y | blur-radius | color */ .one { color: blue; text-decoration: underline
wavy; margin-bottom: 1rem; text-shadow: 3px 3px 2px hsla(0, 0%, 0%, .5) } .rings
{ color: orange; text-shadow: -15px -8px 0 blue, 14px -8px 0 black, 29px 0 0
green, 44px -8px 0 red; }

/* Задание
В коде html элемент ol с классом items содержит несколько потомков - элементы li c разными атрибутами. В коде css всем элементам, потомкам элемента с классом items задано расстояние между словами в 1rem.

Для двух элементов li с классом item-less и item-normal необходимо переопределить это расстояние c новыми значениями, взятыми из атрибутов data-wordspacing. Для этого:

создай два css правила с селекторами класса item-less и item-normal
задай свойству word-spacing значения, взятые из значений data-wordspacing элемента, имеющего в html тот же класс, что и селектор.
Обрати внимание на наследование свойства word-spacing */

.items { word-spacing: 1rem; } /* Напиши код под этой строкой */ .item-less {
word-spacing: -.25rem; } .item-normal { word-spacing: normal; }

/* Задание
В коде html элемент ol с классом items содержит несколько потомков - элементы li c разными атрибутами. В коде css всем элементам, потомкам элемента с классом items задано расстояние между буквами в .25rem.

Задай классам item-less и item-normal свойство letter-spacing.
Значения для свойства letter-spacing возьми из значения атрибута data-letterspacing
Обрати внимание на наследование этого свойства. */
.items { letter-spacing: .25rem; } /* Напиши код под этой строкой */ .item-less
{ letter-spacing: -.1rem; } .item-normal { letter-spacing: normal; }


/* BLOCK 5

Задание
Задай элементу с классом child ширину, равную половине ширины родительского элемента.

Обрати внимание на разное поведение блочных и строчных элементов при изменении значения ширины в css правиле.
Следует запомнить три правила, которые необходимо вспоминать при изменении размещения элемента на странице с помощью css:

Значение высоты (height) для любых элементов браузер вычисляет на основе высоты контента.
Значение ширины (width) для элементов со значениями display равными inline или inline-block вычисляет на основе ширины контента.
Значение ширины (width) для элементов со значением display равным block равно 100% ширины (width) родительского элемента.
При размещении блоков content box действует особая "гравитация" - все элементы стремятся "упасть" вверх в левый угол.

Точкой отсчета для построения прямоугольника content box является верхний левый угол.

Внимание
Размещать блочные элементы внутри строчных запрещено. */

.parent {
  background: teal;
  margin-bottom: 1rem;
}

.child {
  background: salmon;
  width: 50%;
}

/* Задание
Задай элементу с классом child минимальную ширину, равную 200px.

Обрати внимание на разное поведение блочных и строчных элементов при изменении значения ширины в css правиле. */

.parent {
  background: teal;
  margin-bottom: 1rem;
}

.child {
  width: 2%;
  min-width: 200px;
  background: salmon;
}

/* Задание
Задай элементу с классом child максимальную ширину, равную 200px.

Обрати внимание на разное поведение блочных и строчных элементов при изменении значения ширины в css правиле. */

.parent {
  background: teal;
  margin-bottom: 1rem;
}

.child {
  width: 90%;
  max-width: 200px;
  background: salmon;
}

/* Задание
Задай элементу с классом parent

минимальную высоту, равную 30px;
отступ на нижней стороне элемента в 1rem (отступ от соседнего элемента).
Обрати внимание на отсутствие на веб-странице элемента с высотой 0 и его появление при задании значения свойству min-height. */

.parent {
  background: teal;
  min-height: 30px;
  margin-bottom: 1rem;
}

.child {
  background: salmon;
}

/* Задание
Замени значение height на min-height у элемента с классом card.

Обрати внимание на то как min-height исправил ситуацию с переполнением контента. */

.card {
  background: teal;
  width: 200px;
  min-height: 300px;
}

/* Задание
Измени css свойства родительского элемента (элемента с классом parent) так, чтобы появились отступы от края до элемента-потомка, но ширина родительского элемента при этом осталась прежней. Для этого:

С помощью padding задай отступы в 1rem. Для описания значения padding используй самую короткую запись из одного значения.

Убедись, что геометрия (ширина) элемента с классом parent увеличилась на 2rem (за счет добавления ширины padding). Верни общую ширину блока к начальному значению, уменьшив content box с помощью изменения значения свойства box-sizing.

Перестал вмещаться контент? Замени у родителя и потомка свойство height на min-height. */

.parent {
  width: 200px;
  min-height: 150px;
  padding: 1rem;
  background-color: teal;
  box-sizing: border-box;
}

.child {
  min-height: 150px;
  background-color: goldenrod;
}

/* Theory
  нельзя задать значение в процентах только для border;
для padding и margin процент берется только от значения width вне зависимости от того какой из сторон задается значение;
width берет проценты от ширины родительской width;
height берет проценты от высоты родительской height.
  Задание
Для элемента с классом child задайте с помощью процентов
ширину в половину от ширины родительского элемента;
высоту в половину от высоты родительского элемента;
padding-left в процентах (чтобы получился эквивалент 20px);
margin-top в процентах (чтобы получился эквивалент 40px).
Т.к. высота в процентах отсчитывается только от заданной высоты, то замени свойство min-height у элемента с классом parent на свойство height. */

.parent {
  width: 200px;
  height: 300px;
  background-color: teal;
  box-sizing: border-box;
}

.child {
  border: 1px solid #fff;
  width: 50%;
  height: 50%;
  padding-left: 10%;
  margin-top: 20%;
  background-color: goldenrod;
}

.inner {
  background: red;
  height: 100%;
}

/* Задание
Для элемента с классом parent задай верхнюю границу в 1px стиля solid прозрачного (transparent) цвета.

Убедитесь, что выпадение вертикального отступа исчезло. */


.parent {
  width: 200px;
  height: 300px;
  border-top: 1px solid transparent;
  background-color: teal;
  box-sizing: border-box;
}

.child {
  width: 50%;
  height: 50%;
  border: 1px solid #fff;
  padding-left: 10%;
  margin-top: 20%;
  background-color: goldenrod;
}
.inner {
  background: red;
  height: 100%;
}

/* Выпадение вертикального отступа и margin-collaps можно предотвратить, если придерживаться следующей тактики присваивания padding и margin:

родительскому элементу задавать padding вместо того, чтобы задавать дочернему элементу margin;
родительскому элементу не задавать margin-top, но задавать margin-bottom верхнему соседу.
Задание
Для элемента с классом child
удали свойство margin-top;
добавь свойство padding-top со значением 40px родительскому элементу.
Для элемента с классом parent добавь нижний отступ в 20px.

Обрати внимание, что никаких побочных эффектов от применения вертикальных значений margin не наблюдается. */

.parent {
  width: 200px;
  height: 300px;
  background-color: teal;
  box-sizing: border-box;
  padding-top: 40px;
  margin-bottom: 20px;
}

.child {
  width: 50%;
  height: 50%;
  border: 1px solid #fff;
  margin-left: auto;
  margin-right: auto;
  background-color: goldenrod;
}

/* Задание
Добейся размещения по 4 элемента с классом box в один ряд. Для этого

измени font-size элементу с классом container;
задай font-size элементу с классом box, со значением 1rem (это значение font-size задано body). */

body {
  font-size: 20px;
}
/* 
  ширина container 360  
  или 4 раза по 90  
*/
.container {
  width: 360px;
  margin: auto;
  padding-top: 15px;
  background: burlywood;
  font-size: 0;
}

/* 
  ширина box 15 + 60 + 15
  или 90  
*/
.box {
  width: 60px;
  margin: 0 15px 15px;
  height: 75px;
  line-height: 75px;
  background-color: teal;
  display: inline-block;
  text-align: center;
  color: #fff;
  font-size: 1rem;
}

/* Задание
Добейся размещения по 3 элемента с классом box в один ряд с расстоянием от края в 15px и расстоянием между соседними элементами в 30px. Для этого задай одно свойство margin со значениями

0 для верхнего отступа (его заменяет padding-top родителя);
15px для нижнего отступа;
15px для левого и правого отступа. */

body {
  font-size: 20px;
}
/* 
  ширина container 480  
  или 3 раза по 160  
*/
.container {
  width: 480px;
  margin: auto;
  padding-top: 15px;
  background: burlywood;
  font-size: 0;
}

/* 
  ширина box x + 130 + x
  или 160  
*/
.box {
  width: 130px;
  height: 75px;
  line-height: 75px;
  background-color: teal;
  display: inline-block;
  text-align: center;
  color: #fff;
  font-size: 1rem;
  margin: 0 15px 15px;
}

/* Задание
Добейся размещения по 3 элемента с классом box в один ряд с расстоянием от края в 0 и расстоянием между соседними элементами в 30px (сумма margin-left и margin-right). Для этого задай

margin-left: 0 для 1-го, 4-го, 7-го и 10-го элемента;
margin-right: 0 для 3-го, 6-го, 9-го и 12-го элемента;
margin-bottom: 0 для 10-го, 11-го и 12-го элемента. */

body {
  font-size: 20px;
}

/* 
  2 * 15 - это размер, 
  который box-sizing: border-box 
  отнял у width и height

  ширина container 480  - (2 * 15)
  или 3 раза по 160 - (2 * 15)  
*/
.container {
  width: 480px;
  margin: auto;
  padding: 15px;
  background: burlywood;
  font-size: 0;
  box-sizing: border-box;
}

/* 
  ширина box x + 130 + x
  или 160  
  за исключением крайних элементов
*/
.box {
  width: 130px;
  margin: 0 15px 15px;
  height: 75px;
  line-height: 75px;
  background-color: teal;
  display: inline-block;
  text-align: center;
  color: #fff;
  font-size: 20px;

}

.box:nth-of-type(3n+1) {
  margin-left: 0;
}

.box:nth-of-type(3n) {
  margin-right: 0;
}

.box:nth-last-of-type(-n+3) {
  margin-bottom: 0;
}


/* BLOCK 6 */

/* Задание
Добейся размещения 3-х элементов с классом box в один ряд с расстоянием между соседними элементами в 30px без использования margin. Для этого задай элементу с классом container свойства с подходящими значениями
display для того чтобы flex модель применилась к потомкам;
justify-content для добавления равных отступов между блоками.
Размести текст (цифру) по центру элемента с классом box. Для этого задай элементу с классом box подходящие значения свойствам
display для того чтобы flex модель применилась к потомку - тексту;
justify-content для центрирования по горизонтали ;
align-items для центрирования по вертикали. */

body {
    font-size: 20px;
  }
  
  /* 
    2 * 15 - это размер, 
    который box-sizing: border-box 
    отнял у width и height
  
    ширина container 480  - (2 * 15)
    или 3 раза по 160 - (2 * 15)  
  */
  .container {
    display: flex;
    justify-content: space-between;
    width: 480px;
    margin: auto;
    padding: 15px;
    background: burlywood;
    box-sizing: border-box;
  }
  
  .box {
    display:flex;
    justify-content: center;
    align-items: center;
    width: 130px;
    min-height: 75px;
    background-color: teal;
    color: #fff;
  }

  
  /* Задание
У элемента с классом container padding-left и padding-right равны 0.

Добейся размещения 3-х элементов с классом box в один ряд с расстоянием между соседними элементами в 30px и по 15px по краям, без использования margin.

Для этого задай элементу с классом container подходящее значение для свойства justify-content. */

body {
    font-size: 20px;
  }
  
  /* 
    ширина container 480 
    или 3 раза по 160   
  */
  .container {
    justify-content: space-around;
    width: 480px;
    margin: auto;
    padding: 15px 0;
    background: burlywood;
    box-sizing: border-box;
    display: flex;
  }
  
  .box {
    width: 130px;
    min-height: 75px;
    background-color: teal;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* Задание
Добейся размещения по 3 элемента классом box в один ряд с расстоянием между соседними элементами в 30px без использования margin. И с нижним отступом в 15px.
Для этого задай

элементу с классом container свойство flex-wrap со значением для переноса потомков на новую строку;
элементу с классом box свойство margin-bottom со значением отступа.
Обрати внимание, что у элемента с классом container значение свойства padding в 15px применятся к трем сторонам и не применятся к padding-bottom. */

body {
    font-size: 20px;
  }
  
  .container {
    flex-wrap: wrap;
    width: 480px;
    margin: auto;
    padding: 15px 15px 0;
    background: burlywood;
    box-sizing: border-box;
    display: flex;
    justify-content: space-between;
  }
  
  .box {
    width: 130px;
    min-height: 75px;
    margin-bottom: 15px;
    background-color: teal;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* Задание
Добейся размещения в один ряд элементов внутри header. При этом элемент logo должен быть в левом углу, а меню - в правом.
Для этого задай элементу с классом container

display для того чтобы flex модель применилась к потомкам;
свойство justify-content для размещения элементов по краям родительского элемента;
свойство align-items для центрирования элементов по вертикали;
элементу с классом nav-menu  задай свойство display для того, чтобы flex модель применилась к потомкам. */

a {
    text-decoration: none;
  }
  
  .container {
    display: flex;
    justify-content: space-between;
    align-items: center;
    max-width: 480px;
    margin: auto;
    padding: 15px;
    background: burlywood;
    box-sizing: border-box;
  }
  
  .nav-menu {
    display: flex;
    list-style: none;
  }
  
  .nav-menu_link {
    margin: 0 15px;
  }

  /* Задание
Добейся размещения элемента с классом box-left в левом углу, не меняя положения элементов, расположенных в правом углу.
Для этого задай элементу с классом box-left подходящее свойство margin с нужным значением. */

body {
    font-size: 20px;
  }
  
  /* 
    ширина container 480 
    или 3 раза по 160   
  */
  .container {
    width: 90%;
    margin: auto;
    padding: 15px 0;
    background: burlywood;
    box-sizing: border-box;
    display: flex;
    justify-content: flex-end;
  }
  
  .box {
    width: 130px;
    min-height: 75px;
    background-color: teal;
    color: #fff;
    display: flex;
    justify-content: center;
    align-items: center;
    margin: 0 15px
  }
  
  .box-left {
  margin-right: auto;
  }
